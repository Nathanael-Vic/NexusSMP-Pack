name: Build and Release Modpack ZIP

on:
  push:
    branches:
      - main  # roda sempre que fizer push na main
  workflow_dispatch: # permite rodar manualmente

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Permissão necessária para criar um release

    steps:
      # 1. Baixar o repositório
      - name: Checar código
        uses: actions/checkout@v3

      # 2. Limpar qualquer ZIP antigo (garantia)
      - name: Limpar ZIP antigo
        run: rm -f NexusSMP-Pack.zip

      # 3. Criar o novo ZIP (excluindo pastas do git/github)
      - name: Criar ZIP do modpack
        run: zip -r NexusSMP-Pack.zip . -x ".git*" ".github/*"

      # 4. Criar um "Release" no GitHub e anexar o ZIP
      - name: Criar Release e Fazer Upload do ZIP
        uses: softprops/action-gh-release@v1
        with:
          # Nome do Release que aparecerá no GitHub
          name: "NexusSMP Pack (Build Automático)"
          
          # O "tag" do release. Usamos o hash do commit para ser único.
          # Isso vai criar um novo release a cada push.
          tag_name: "build-${{ github.sha }}"
          
          # Descrição
          body: |
            Build automático do modpack gerado a partir do commit ${{ github.sha }}.
            Este é o ZIP mais recente para importação no Prism Launcher.
            
          # Arquivos para anexar
          files: NexusSMP-Pack.zip
        env:
          # O token é automático, não precisa configurar nada
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

